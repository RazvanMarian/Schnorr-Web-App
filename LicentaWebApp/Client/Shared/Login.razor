@using LicentaWebApp.Client.ViewModels
@using LicentaWebApp.Shared
@using Blazored.LocalStorage
@inject ILoginViewModel _loginViewModel
@inject NavigationManager _navigationManager
@inject ISnackbar _snackbar
@inject ILocalStorageService _localStorageService

<div style="max-width: 400px; margin: auto">

    <img src="logo.png" alt="" style="margin-left: auto; margin-right: auto; display: block;  padding-bottom: 1rem"/>
    <EditForm Model="@_loginViewModel" OnValidSubmit="AuthenticateJwt">

        <DataAnnotationsValidator/>
        <MudCard>
            <MudCardContent>
                <MudTextField Label="Email" Class="mt-3"
                              @bind-Value="_loginViewModel.EmailAddress" For="@(() => _loginViewModel.EmailAddress)"/>
                <MudTextField Label="Password" HelperText="I hope you did not forget your password.." Class="mt-3"
                              @bind-Value="_loginViewModel.Password" For="@(() => _loginViewModel.Password)"
                              InputType="InputType.Password"/>
            </MudCardContent>
            <MudCardActions>
                <MudButton ButtonType="ButtonType.Submit" Variant="Variant.Filled" Color="Color.Primary"
                           Class="ml-auto" Style="margin: auto">Login</MudButton>
            </MudCardActions>
        </MudCard>
        <MudText Typo="Typo.body2" Align="Align.Center" Class="my-4">
            Hopefully you did not forget your password!
        </MudText>

    </EditForm>
</div>

@code {
    
    
    private async Task AuthenticateJwt()
    {
        var authenticationResponse = await _loginViewModel.AuthenticateJwt();

        if (authenticationResponse.Token != string.Empty)
        {
            await _localStorageService.SetItemAsync("jwt_token", authenticationResponse.Token);
            _navigationManager.NavigateTo("/Auth-Challenge",true);
        }
        else
        {
            _snackbar.Configuration.PositionClass = Defaults.Classes.Position.TopRight;
            _snackbar.Add("Username or password are wrong!", Severity.Error);
        }
    }
    

}
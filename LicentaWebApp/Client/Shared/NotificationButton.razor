@using LicentaWebApp.Shared.Models
@using System.Threading
@inject IDialogService DialogService
@inject NavigationManager NavigationManager

<MudMenu Disabled="@(NotificationsNumber == 0)" MaxHeight="300" AnchorOrigin="Origin.BottomCenter" TransformOrigin="Origin.TopCenter">
    <ActivatorContent>
        @if (@NotificationsNumber > 0)
        {
            <MudBadge Overlap="true" Content="NotificationsNumber" Color="Color.Primary">
                <MudIconButton Icon="@Icons.Material.Outlined.Notifications"></MudIconButton>
                </MudBadge>
        }
        else
        {
            <MudIconButton Icon="@Icons.Material.Outlined.Notifications"></MudIconButton>
        }

    </ActivatorContent>

    <ChildContent>
        @foreach (var notification in Notifications)
        {
            <MudMenuItem OnClick="@(_ => OpenNotification(notification))" Style="max-width: 240px">
                <MudText>@notification.FileName</MudText>
                <MudText Typo="Typo.body2">Started by: @notification.InitiatorFirstName @notification.InitiatorLastName</MudText>
                <MudText Typo="Typo.body2">Created on: @notification.CreatedAt.Day-@notification.CreatedAt.Month-@notification.CreatedAt.Year</MudText>
                @* <MudText>At: @notification.CreatedAt.Hour:@notification.CreatedAt.Minute @notification.CreatedAt.ToString("tt")</MudText> *@
            </MudMenuItem>
            <MudDivider/>
        }
    </ChildContent>
</MudMenu>


@code{
    private bool _isOpen = false;

    [Parameter]
    public int NotificationsNumber { get; set; }

    [Parameter]
    public List<Notification> Notifications { get; set; } = new();

    private void ToggleOpen()
    {
        _isOpen = !_isOpen;
    }

    private void OpenNotification(Notification notification)
    {
        NavigationManager.NavigateTo($"/Notification/{notification.Id}");
    }

}
@using Blazored.LocalStorage
@using LicentaWebApp.Client.ViewModels
@using LicentaWebApp.Shared.Models
@inherits LayoutComponentBase
@inject NavigationManager _navigationManager
@inject ILocalStorageService _localStorageService
@inject INotificationViewModel _notificationViewModel

<MudThemeProvider Theme="_currentTheme"/>
<MudDialogProvider/>
<MudSnackbarProvider/>

<style>
    .mud-nav-link-text {
        color: #bbbbbb;
    }
</style>

<AuthorizeView>
    <Authorized>
        <MudLayout>
            <MudAppBar Elevation="1">
                <MudIconButton Icon="@Icons.Material.Filled.Menu" Color="Color.Inherit" Edge="Edge.Start"
                               OnClick="() => { _open = !_open; }"/>
                <MudSpacer/>

                <MudTooltip Text="Notifications">
                    <NotificationButton Notifications="@Notifications" NotificationsNumber="@NotificationNumber"/>
                </MudTooltip>

                <MudTooltip Text="DarkMode">
                    @if (_currentTheme == _darkTheme)
                    {
                        <MudIconButton Icon="@Icons.Material.Filled.WbSunny" OnClick="@(_ => DarkMode())"></MudIconButton>
                    }
                    else
                    {
                        <MudIconButton Icon="@Icons.Material.Filled.ModeNight" OnClick="@(_ => DarkMode())"></MudIconButton>
                    }
                </MudTooltip>

                <MudTooltip Text="Github">
                    <MudIconButton Icon="@Icons.Custom.Brands.GitHub" Color="Color.Inherit"
                                   Link="https://github.com/RazvanMarian/Schnorr-Web-App" Target="_blank"/>
                </MudTooltip>
                <MudTooltip Text="Log out">
                    <MudIconButton Icon="@Icons.Material.Filled.Logout" Color="Color.Inherit" OnClick="LogoutUser"/>
                </MudTooltip>
            </MudAppBar>

            <NavBar Open="@_open"/>

            <MudMainContent Class="pt-16 px-16">
                <MudContainer Class="mt-6">
                    @Body
                </MudContainer>
            </MudMainContent>
        </MudLayout>
    </Authorized>
    <NotAuthorized>
        <MudLayout>
            <MudMainContent Class="pt-16 px-16">
                <MudContainer Class="mt-6">
                    @Body
                </MudContainer>
            </MudMainContent>
        </MudLayout>
    </NotAuthorized>
</AuthorizeView>


@code {
    bool _open;
    int NotificationNumber { get; set; }

    List<Notification> Notifications { get; set; } = new();

    [CascadingParameter]
    protected Task<AuthenticationState> AuthState { get; set; }

    protected override void OnInitialized()
    {
        _currentTheme = _darkTheme;
    }

    protected override async Task OnInitializedAsync()
    {
        var authState = await AuthState;
        var user = authState.User;

        if (user.Identity is {IsAuthenticated: true })
        {
            PollForUpdates();
        }
    }

    private async void PollForUpdates()
    {
        while (true)
        {
            var authState = await AuthState;
            var user = authState.User;

            if (user.Identity is {IsAuthenticated: true })
            {
                Notifications = await _notificationViewModel.GetNotifications();

                NotificationNumber = Notifications?.Count ?? 0;
            }
            StateHasChanged();
            await Task.Delay(30000);
        }
    }

    MudTheme _currentTheme = new();

    readonly MudTheme _defaultTheme = new()
    {
        Palette = new Palette()
        {
            Black = "#272c34"
        }
    };

    readonly MudTheme _darkTheme = new()
    {
        Palette = new Palette()
        {
            Black = "#27272f",
            Background = "#32333d",
            BackgroundGrey = "#27272f",
            Surface = "#373740",
            DrawerBackground = "#27272f",
            DrawerText = "rgba(255,255,255, 0.50)",
            DrawerIcon = "rgba(255,255,255, 0.50)",
            AppbarBackground = "#27272f",
            AppbarText = "rgba(255,255,255, 0.70)",
            TextPrimary = "rgba(255,255,255, 0.70)",
            TextSecondary = "rgba(255,255,255, 0.50)",
            ActionDefault = "#adadb1",
            ActionDisabled = "rgba(255,255,255, 0.26)",
            ActionDisabledBackground = "rgba(255,255,255, 0.12)",
            Divider = "rgba(255,255,255, 0.12)",
            DividerLight = "rgba(255,255,255, 0.06)",
            TableLines = "rgba(255,255,255, 0.12)",
            LinesDefault = "rgba(255,255,255, 0.12)",
            LinesInputs = "rgba(255,255,255, 0.3)",
            TextDisabled = "rgba(255,255,255, 0.2)"
        }
    };

    void DarkMode()
    {
        _currentTheme = _currentTheme == _defaultTheme ? _darkTheme : _defaultTheme;
    }

    private async Task LogoutUser()
    {
        await _localStorageService.RemoveItemAsync("jwt_token");
        _navigationManager.NavigateTo("/Login", true);
    }

}
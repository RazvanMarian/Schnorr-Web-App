@using System.Buffers
@inject IUploadFileService UploadFileService
@inject ISnackbar Snackbar

<MudDialog>
    <DialogContent>

        <MudText Typo="Typo.h5" Align="Align.Center">@Seconds</MudText>
        <MudTextField Label="Authentication code" @bind-Value="@InputValue" Style="text-align: center !important;"/>

    </DialogContent>
    <DialogActions>
        <MudButton Color="Color.Primary" OnClick="Submit">Submit</MudButton>
        <MudButton Color="Color.Error" OnClick="Cancel">Cancel</MudButton>
    </DialogActions>
</MudDialog>

@code {

    [CascadingParameter]
    MudDialogInstance MudDialog { get; set; }

    private string InputValue { get; set; }

    int Seconds { get; set; } = 60;

    protected override async Task OnInitializedAsync()
    {
        var result = await UploadFileService.GenerateOtpCode();
        if (result == "Error")
        {
            Snackbar.Configuration.PositionClass = Defaults.Classes.Position.TopRight;
            Snackbar.Add("Error generating otp code!", Severity.Error);
            MudDialog.Cancel();
        }
        while (Seconds > 0)
        {
            await Task.Delay(1000);
            Seconds--;
            StateHasChanged();
        }
        MudDialog.Cancel();
    }

    async Task Submit()
    {
        var result = await UploadFileService.TestOtpCode(InputValue.ToUpper());
        if(result!=null)
            MudDialog.Close(DialogResult.Ok(true));
        else
        {
            Snackbar.Configuration.PositionClass = Defaults.Classes.Position.TopRight;
            Snackbar.Add("The code is not correct!", Severity.Error);
        }
    }

    void Cancel() => MudDialog.Cancel();
}
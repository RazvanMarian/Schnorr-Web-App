@page "/login"
@using LicentaWebApp.Client.ViewModels
@inject ILoginViewModel _loginViewModel
@inject NavigationManager _navigationManager
@inject ISnackbar _snackbar

<div style="max-width: 400px;">
    <EditForm Model="@_loginViewModel" OnValidSubmit="LoginUser">
        <DataAnnotationsValidator />
        <MudCard>
            <MudCardContent>
                <MudTextField Label="Email" Class="mt-3"
                              @bind-Value="_loginViewModel.EmailAddress" For="@(() => _loginViewModel.EmailAddress)" />
                <MudTextField Label="Password" HelperText="I hope you did not forget your password.." Class="mt-3"
                              @bind-Value="_loginViewModel.Password" For="@(() => _loginViewModel.Password)" InputType="InputType.Password" />
            </MudCardContent>
            <MudCardActions> 
                <MudButton ButtonType="ButtonType.Submit" Variant="Variant.Filled" Color="Color.Primary" Class="ml-auto">Login</MudButton>
            </MudCardActions>
        </MudCard>
        <MudText Typo="Typo.body2" Align="Align.Center" Class="my-4">
            Hopefully you did not forget your password!
        </MudText>

    </EditForm>
</div>

@code {
    
    private async Task LoginUser(EditContext context)
    {
        var result = await _loginViewModel.LoginUser();
        if (result.IsSuccessStatusCode)
        {
            _navigationManager.NavigateTo("/", true);
            
        }
        else
        {
            _snackbar.Configuration.PositionClass = Defaults.Classes.Position.TopCenter;
            _snackbar.Add("Username or password are wrong!", Severity.Error);
            _loginViewModel.Password = "";
            _loginViewModel.EmailAddress = "";
            
        }
        StateHasChanged();

    }
    

}
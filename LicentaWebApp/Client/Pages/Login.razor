@page "/Login"

@using LicentaWebApp.Client.ViewModels
@using Blazored.LocalStorage
@inject ILoginViewModel _loginViewModel
@inject NavigationManager _navigationManager
@inject ISnackbar _snackbar
@inject ILocalStorageService _localStorageService
@inject IUserViewModel _userViewModel

<div style="max-width: 400px; margin: auto">

    <img src="logo.png" alt="" style="margin: auto; display: block;  padding-bottom: 1rem; max-width: 100%"/>
    <EditForm Model="@_loginViewModel" OnValidSubmit="AuthenticateJwt">

        <DataAnnotationsValidator/>
        <MudCard>
            <MudCardContent>
                <MudTextField Label="Email" Class="mt-3"
                              @bind-Value="_loginViewModel.EmailAddress" For="@(() => _loginViewModel.EmailAddress)"/>
                <MudTextField Label="Password" HelperText="I hope you did not forget your password.." Class="mt-3"
                              @bind-Value="_loginViewModel.Password" For="@(() => _loginViewModel.Password)"
                              InputType="InputType.Password"/>
            </MudCardContent>
            <MudCardActions>
                <MudButton Disabled="Processing" ButtonType="ButtonType.Submit" Variant="Variant.Filled" Color="Color.Primary"
                           Class="ml-auto" Style="margin: auto">
                    Login
                </MudButton>
            </MudCardActions>
        </MudCard>
        <MudText Typo="Typo.body2" Align="Align.Center" Class="my-4">
            Hopefully you did not forget your password!
        </MudText>

    </EditForm>
</div>

@code {
    private bool Processing { get; set; } = false;

    private async Task AuthenticateJwt()
    {
        Processing = true;
        var authenticationResponse = await _loginViewModel.AuthenticateJwt();
        if (authenticationResponse.Email != string.Empty)
        {
            _userViewModel.EmailAddress = authenticationResponse.Email;
            _userViewModel.ValidOtp = true;
            _navigationManager.NavigateTo("/Login/Challenge");
        }
        else
        {
            _snackbar.Configuration.PositionClass = Defaults.Classes.Position.TopRight;
            _snackbar.Add("Username or password are wrong!", Severity.Error);
        }
        Processing = false;
    }


}
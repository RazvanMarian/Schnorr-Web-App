@page "/login"
@using LicentaWebApp.Client.ViewModels
@inject ILoginViewModel _loginViewModel
@inject NavigationManager _navigationManager

<div style="max-width: 400px;">
    <EditForm Model="@_loginViewModel" OnValidSubmit="LoginUser">
        <DataAnnotationsValidator />
        <MudCard>
            <MudCardContent>
                <MudTextField Label="Email" Class="mt-3"
                              @bind-Value="_loginViewModel.EmailAddress" For="@(() => _loginViewModel.EmailAddress)" />
                <MudTextField Label="Password" HelperText="I hope you did not forget your password.." Class="mt-3"
                              @bind-Value="_loginViewModel.Password" For="@(() => _loginViewModel.Password)" InputType="InputType.Password" />
            </MudCardContent>
            <MudCardActions> 
                <MudButton ButtonType="ButtonType.Submit" Variant="Variant.Filled" Color="Color.Primary" Class="ml-auto">Login</MudButton>
            </MudCardActions>
        </MudCard>
        <MudText Typo="Typo.body2" Align="Align.Center" Class="my-4">
            Fill out the form correctly to see the success message.
        </MudText>

        <MudExpansionPanels>
            <MudExpansionPanel Text="Show Validation Summary">
                @if (_success)
                {
                    <MudText Color="Color.Success">Success</MudText>
                }
                else
                {
                    <MudText Color="@Color.Error">
                        <ValidationSummary />
                    </MudText>
                }
            </MudExpansionPanel>
        </MudExpansionPanels>
    </EditForm>
</div>

@code {
    // readonly RegisterAccountForm _model = new RegisterAccountForm();
    // bool _success;
    //
    // public class RegisterAccountForm
    // {
    //
    //     [Required]
    //     [EmailAddress]
    //     public string Email { get; set; }
    //
    //     [Required]
    //     [StringLength(30, ErrorMessage = "Password must be at least 8 characters long.", MinimumLength = 8)]
    //     public string Password { get; set; }
    //     
    // }
    
    bool _success;

    private async Task LoginUser(EditContext context)
    {
        await _loginViewModel.LoginUser();
        _navigationManager.NavigateTo("/",true);
        _success = true;
         StateHasChanged();

    }
    
    // private void OnValidSubmit(EditContext context)
    // {
    //     _success = true;
    //     StateHasChanged();
    // }

}
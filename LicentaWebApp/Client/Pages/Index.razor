@page "/"

@using LicentaWebApp.Client.ViewModels
@inject NavigationManager _navigationManager
@inject ILoginViewModel _loginViewModel
@inject ISnackbar _snackbar

<AuthorizeView>
    <Authorized>
        <MudText Style="margin-bottom: 2rem" Typo="Typo.h2"> Welcome to my Schnorr signature application </MudText>

        <MudCarousel Style="height:30rem;" ShowArrows="true" ShowDelimiters="true" AutoCycle="true" TData="object">
            <MudCarouselItem Transition="Transition.Slide" Color="@Color.Primary">
                <div class="d-flex" style="height:100%; justify-content: center">
                    <MudText Typo="Typo.h3">To do..</MudText>
                </div>
            </MudCarouselItem>
            <MudCarouselItem Transition="Transition.Slide" Color="@Color.Secondary">
                <div class="d-flex" style="height:100%">
                    <MudIcon Class="mx-auto my-auto" Icon="@Icons.Filled.Analytics" Size="@Size.Large"/>
                </div>
            </MudCarouselItem>
            <MudCarouselItem Transition="Transition.Slide" Color="Color.Surface">
                <div class="d-flex" style="height:100%">
                    <MudIcon Class="mx-auto my-auto" Icon="@Icons.Custom.Brands.MudBlazor" Color="@Color.Primary" Size="@Size.Large"/>
                </div>
            </MudCarouselItem>
        </MudCarousel>

        <MudGrid Spacing="2" Justify="Justify.Center" Style="margin-top: 1rem">
            <MudButton Variant="Variant.Filled" Color="Color.Primary" OnClick="OnClickFunction">Get started</MudButton>
        </MudGrid>
    </Authorized>
    <NotAuthorized>
        <Login></Login>
    </NotAuthorized>
</AuthorizeView>


@code{

    void OnClickFunction()
    {
        _navigationManager.NavigateTo("/Sign");
    }

    private async Task LoginUser(EditContext context)
    {
        var result = await _loginViewModel.LoginUser();
        if (result.IsSuccessStatusCode)
        {
            _navigationManager.NavigateTo("/", true);
        }
        else
        {
            _snackbar.Configuration.PositionClass = Defaults.Classes.Position.TopCenter;
            _snackbar.Add("Username or password are wrong!", Severity.Error);
            _loginViewModel.Password = "";
            _loginViewModel.EmailAddress = "";
        }
        StateHasChanged();
    }

}